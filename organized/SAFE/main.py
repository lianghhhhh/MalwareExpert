import logging
from sisa import SISA
from MalwareExpert import MalwareExpert

def training(logger):
    print('Training the model...')
    logger.info('Training the model...')
    mySISA = SISA(logger)
    mySISA.divide_data()
    mySISA.preprocess(purpose='train')
    mySISA.sisa_training()

def prediction(logger):
    print('Predicting by the model...')
    logger.info('Predicting by the model...')
    mySISA = SISA(logger)
    mySISA.majority_vote(purpose='predict')
    mySISA.explain()

def unlearning(logger):
    print('Unlearning the model...')
    logger.info('Unlearning the model...')
    mySISA = SISA(logger)
    mySISA.machine_unlearning()

def set_log():
    logger = logging.getLogger("asm2vec")
    logger.setLevel(logging.INFO)

    formatter = logging.Formatter('%(asctime)s - %(filename)s - %(levelname)s - %(message)s')
    file_handler = logging.FileHandler('./log.log', mode='w')
    file_handler.setLevel(logging.INFO)
    file_handler.setFormatter(formatter)

    stream_handler = logging.StreamHandler()
    stream_handler.setFormatter(formatter)

    logger.addHandler(file_handler)
    logger.addHandler(stream_handler)

    logger.info('Program has started')
    return logger

if __name__ == '__main__':
    
    logger = set_log()
    detector = MalwareExpert(logger)

    if detector.config.train:
        training(logger)
    elif detector.config.predict:
        prediction(logger)
    elif detector.config.unlearn:
        unlearning(logger)

    logger.info('Program has ended')
