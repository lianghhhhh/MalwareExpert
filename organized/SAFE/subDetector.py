from malwareDetector.detector import detector
from typing import Any
import numpy as np
import subprocess

class subDetector(detector):
    def __init__(self) -> None:
        super().__init__()

    def extractFeature(self) -> Any:
        print('Extracting and Vectorizing the features...')
        # run 'python test.py' to extract features
        subprocess.call('python test.py', shell=True)
        return None

    def vectorize(self) -> np.array:
        return None

    def model(self) -> Any:
        print('Training...')
        subprocess.call('python gnn/train.py', shell=True)

    def predict(self) -> np.array:
        print('Predicting the dataset...')
        subprocess.call('python gnn/predict.py', shell=True)

    def explain(self) -> Any:
        print('Explaining the model...')
        subprocess.call('python gnn/explain.py', shell=True)

    def machine_unlearning(self) -> Any:
        print('Machine unlearning...')
        subprocess.call('python gnn/unlearn.py', shell=True)


if __name__ == '__main__':
    myDetector = subDetector()
    #myDetector.extractFeature()
    #myDetector.model()
    #myDetector.predict()
    #myDetector.explain()
    myDetector.machine_unlearning()

    