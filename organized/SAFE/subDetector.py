from malwareDetector.detector import detector
from typing import Any
import numpy as np
import os

class subDetector(detector):
    def __init__(self) -> None:
        super().__init__()

    def extractFeature(self) -> Any:
        print('Extracting features from the dataset...')
        # run 'python test.py' to extract features
        os.system('python test.py')
        return None

    def vectorize(self) -> np.array:
        print('Vectorizing the features...')
        # gnn/main.py/utils.py/load_data
        os.system('python gnn/main.py')

    def model(self, training:bool=True) -> Any:
        if training:
            print('Training...')
            # gnn/main.py/train ?
        else:
            print('Loading model...')
            # gnn/load_model ?

    def predict(self) -> np.array:
        print('Predicting the dataset...')
        # gnn/main.py/predict ? majority_vote ?

if __name__ == '__main__':
    myDetector = subDetector()
    myDetector.mkdir()
    #myDetector.extractFeature()
    #myDetector.vectorize()
    