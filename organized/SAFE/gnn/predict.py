# for users to predict the result of the model
# put the embedding you want to predict in the folder 'Predict'
import torch
import torch_geometric
import torch_geometric.data
from utils import load_data, majority_vote
import csv

#import subDetector from parent directory
import sys
import os
parend_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), os.path.pardir))
sys.path.append(parend_dir)
from subDetector import subDetector

#load data
feature_matrix, edge_index, name = load_data(predict=True)

x = [torch.tensor(feature_matrix[i], dtype=torch.float) for i in range(len(feature_matrix))]
edge_index = [torch.tensor(edge_index[i], dtype=torch.long) for i in range(len(edge_index))]
name = name
all_data = [torch_geometric.data.Data(x=x[i], edge_index=edge_index[i], name=name[i]) for i in range(len(x))]

#predict the dataset, majority vote
with open(subDetector().config.path.predict, 'w') as f:
    csv_writer = csv.writer(f)
    csv_writer.writerow(['name', 'predict'])
    for data in all_data:
        predict = majority_vote(data)
        print("data name: ", data.name, " predicted: ", predict)
        csv_writer.writerow([data.name, predict])

