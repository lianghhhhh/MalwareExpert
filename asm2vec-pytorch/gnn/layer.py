#linear, graphConv, deeperGCN*n(7), normalization, activation, global mean pooling, dropout, linear, softmax
#deeperGCN: normalization, activation, dropout, graphConv

import torch
import torch.nn as nn
from torch_geometric.nn import GCNConv

class deeperGCN(nn.Module):
    def __init__(self, in_channels, out_channels):
        super(deeperGCN, self).__init__()
        self.norm = nn.LayerNorm(out_channels)
        self.act = nn.ReLU()
        self.dropout = nn.Dropout(p=0.5)
        self.conv = GCNConv(in_channels, out_channels)

    def forward(self, x, edge_index):
        x = self.norm(x)
        x = self.act(x)
        x = self.dropout(x)
        x = self.conv(x, edge_index)
        return x